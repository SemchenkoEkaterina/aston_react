{"version":3,"file":"static/js/440.3efe26a0.chunk.js","mappings":"iOAiBA,MAoEA,EApEkBA,IAAiD,IAAhD,MAAEC,EAAK,QAAEC,EAAO,YAAEC,GAAwBH,EAC3D,MAAOI,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,IAC3BG,GAAWC,EAAAA,EAAAA,MAYjB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACRC,UAAU,mDACVC,MAAO,CAAEC,OAAQC,OAAOC,YAAc,IAAKN,UAE3CO,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACL,MAAO,CAAEM,MAAO,KAAOP,UAAU,MAAKF,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,MAAII,UAAU,SAAQF,SAAEX,EAAU,qEAAgB,wEAClDkB,EAAAA,EAAAA,MAACG,EAAAA,EAAI,CAACR,UAAU,qBAAoBF,SAAA,EAClCF,EAAAA,EAAAA,KAACY,EAAAA,EAAKC,QAAO,CACXT,UAAU,OACVU,YAAY,0EACZC,MAAOtB,EACPuB,SAAWC,GAAMvB,EAASuB,EAAEC,OAAOH,UAErCf,EAAAA,EAAAA,KAACY,EAAAA,EAAKC,QAAO,CACXT,UAAU,OACVU,YAAY,wGACZK,KAAK,WACLJ,MAAOnB,EACPoB,SAAWC,GAAMpB,EAAQoB,EAAEC,OAAOH,UAEpCN,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CACFhB,UAAU,sCACVC,MAAO,CAAEM,MAAO,QAAST,SAAA,CAExBX,GACCkB,EAAAA,EAAAA,MAAA,OAAKJ,MAAO,CAAEM,MAAO,OAAQT,SAAA,CAAC,uEACd,KACdF,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAACC,GAAIC,EAAAA,GAAmBrB,SAAC,oGAGnCO,EAAAA,EAAAA,MAAA,OAAKJ,MAAO,CAAEM,MAAO,OAAQT,SAAA,CAAC,yEACdF,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAACC,GAAIE,EAAAA,GAAYtB,SAAC,oDAG5CF,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CACLpB,MAAOd,EAAU,CAAEoB,MAAO,OAAU,CAAEA,MAAO,OAC7CP,UAAU,iBACVsB,QAAQ,iBACRC,KAAK,KACLC,QAnDOC,UACnB,UACQrC,EAAYC,EAAOG,GACzBE,EAAS,IACX,CAAE,MAAOgC,GACPhC,EAAS,UACTiC,MAAMD,EACR,GA4CkC5B,SAErBX,EAAU,iCAAU,mFAM9B,C,kGC5EP,MAiBA,EAjBqByC,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,KAKjB,OACElC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACmC,EAAAA,EAAS,CACR7C,MAAM,eACNC,SAAS,EACTC,YARqBqC,MAAOpC,EAAe2C,WACzCC,EAAAA,EAAAA,IAA2B5C,EAAO2C,EAAUH,EAAS,KASxD,C","sources":["components/Form.tsx","pages/Registration.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, Card, Container, Row } from 'react-bootstrap'\nimport Form from 'react-bootstrap/Form'\nimport { NavLink, useNavigate } from 'react-router-dom'\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE } from '../utils/const'\n\ntype FormValues = {\n  email: string\n  pass: string\n}\n\ntype FormProps = {\n  title: string\n  isLogin: boolean\n  handleClick: (email: string, pass: string) => Promise<void>\n}\n\nconst FormLogin = ({ title, isLogin, handleClick }: FormProps) => {\n  const [email, setEmail] = useState('')\n  const [pass, setPass] = useState('')\n  const navigate = useNavigate()\n\n  const onSubmitForm = async () => {\n    try {\n      await handleClick(email, pass)\n      navigate('/')\n    } catch (error) {\n      navigate('/login')\n      alert(error)\n    }\n  }\n\n  return (\n    <>\n      <Container\n        className=\"d-flex justify-content-center align-items-center\"\n        style={{ height: window.innerHeight - 76 }}\n      >\n        <Card style={{ width: 600 }} className=\"p-5\">\n          <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : 'Регистрация'}</h2>\n          <Form className=\"d-flex flex-column\">\n            <Form.Control\n              className=\"mt-4\"\n              placeholder=\"Введите ваш e-mail...\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Form.Control\n              className=\"mt-4\"\n              placeholder=\"Введите ваш пароль...\"\n              type=\"password\"\n              value={pass}\n              onChange={(e) => setPass(e.target.value)}\n            />\n            <Row\n              className=\"mt-4 d-flex justify-content-between\"\n              style={{ width: '102%' }}\n            >\n              {isLogin ? (\n                <div style={{ width: '85%' }}>\n                  Нет аккаунта?{' '}\n                  <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                </div>\n              ) : (\n                <div style={{ width: '79%' }}>\n                  Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                </div>\n              )}\n              <Button\n                style={isLogin ? { width: '15%' } : { width: '21%' }}\n                className=\"align-self-end\"\n                variant=\"outline-danger\"\n                size=\"sm\"\n                onClick={onSubmitForm}\n              >\n                {isLogin ? 'Войти' : 'Регистрация'}\n              </Button>\n            </Row>\n          </Form>\n        </Card>\n      </Container>\n    </>\n  )\n}\n\nexport default FormLogin\n","import React from 'react'\nimport FormLogin from '../components/Form'\nimport { useAppDispatch } from '../hooks/redux.hook'\nimport { signUpWithEmailAndPassword } from '../utils/authService'\n\nconst Registration = () => {\n  const dispatch = useAppDispatch()\n\n  const handleRegistration = async (email: string, password: string) => {\n    await signUpWithEmailAndPassword(email, password, dispatch)\n  }\n  return (\n    <>\n      <FormLogin\n        title=\"registration\"\n        isLogin={false}\n        handleClick={handleRegistration}\n      />\n    </>\n  )\n}\n\nexport default Registration\n"],"names":["_ref","title","isLogin","handleClick","email","setEmail","useState","pass","setPass","navigate","useNavigate","_jsx","_Fragment","children","Container","className","style","height","window","innerHeight","_jsxs","Card","width","Form","Control","placeholder","value","onChange","e","target","type","Row","NavLink","to","REGISTRATION_ROUTE","LOGIN_ROUTE","Button","variant","size","onClick","async","error","alert","Registration","dispatch","useAppDispatch","FormLogin","password","signUpWithEmailAndPassword"],"sourceRoot":""}